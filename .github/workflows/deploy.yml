name: Deploy

on:
  workflow_call:
    inputs:
      app-name:
        required: true
        type: string
      bundle-id:
        required: true
        type: string
      development-team:
        required: true
        type: string
      project-name:
        required: true
        type: string
      provisioning-profile-name:
        required: true
        type: string
      scheme:
        required: true
        type: string
    secrets:
      appleid-email:
        required: true
      appleid-password:
        required: true
      keychain-password:
        required: true
      mobileprovision-base64:
        required: true
      p12-base64:
        required: true
      p12-password:
        required: true

jobs:
  deploy:
    runs-on: macos-13
    env:
      APP_NAME: ${{ inputs.app-name }}
      BUNDLE_ID: ${{ inputs.bundle-id }}
      EXPORT_OPTIONS_PLIST: ./export-options.plist
      PROVISIONING_PROFILE_NAME: ${{ inputs.provisioning-profile-name }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up provisioning profile
      env:
        KEYCHAIN_PASSWORD: ${{ secrets.keychain-password }}
        MOBILEPROVISION_BASE64: ${{ secrets.mobileprovision-base64 }}
        P12_BASE64: ${{ secrets.p12-base64 }}
        P12_PASSWORD: ${{ secrets.p12-password }}
      run: |
        CERTIFICATE_PATH=$RUNNER_TEMP/certificate.p12
        PP_PATH=$RUNNER_TEMP/provisioning-profile.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        echo -n "$P12_BASE64" | base64 --decode -o $CERTIFICATE_PATH
        echo -n "$MOBILEPROVISION_BASE64" | base64 --decode -o $PP_PATH

        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
    - name: Generate build number
      id: buildnumber
      run: echo "build_number=$(git log --oneline | wc -l | awk '{print $1}')" >> $GITHUB_OUTPUT
    - name: Set up project.yml
      uses: fjogeleit/yaml-update-action@main
      with:
        valueFile: project.yml
        changes: |
          {
            "settings.base.PRODUCT_BUNDLE_IDENTIFIER": "${{ inputs.bundle-id }}",
            "targets.${{ inputs.app-name }}.settings.configs.Release.PROVISIONING_PROFILE_SPECIFIER": "${{ inputs.provisioning-profile-name }}",
            "settings.base.DEVELOPMENT_TEAM": "${{ inputs.development-team }}",
            "settings.base.CURRENT_PROJECT_VERSION": "${{ steps.buildnumber.outputs.build_number }}"
          }
        commitChange: false
    - name: XcodeGen
      uses: xavierLowmiller/xcodegen-action@1.1.2
      with:
        spec: project.yml
        version: 2.38.0
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: "15.0"
    - name: Archive
      env:
        PROJECT_NAME: ${{ inputs.project-name }}
        SCHEME: ${{ inputs.scheme }}
      run: |
        xcodebuild archive \
          -project $PROJECT_NAME.xcodeproj \
          -scheme $SCHEME \
          -archivePath ./build/$APP_NAME.xcarchive \
          -destination "generic/platform=iOS" \
          -configuration Release
    - name: Set up export options
      run: |
        BUDDY=/usr/libexec/PlistBuddy

        $BUDDY -c "add :method string app-store" $EXPORT_OPTIONS_PLIST
        $BUDDY -c "add :uploadSymbols bool true" $EXPORT_OPTIONS_PLIST
        $BUDDY -c "add :provisioningProfiles dict" $EXPORT_OPTIONS_PLIST
        $BUDDY -c "add :provisioningProfiles:$BUNDLE_ID string $PROVISIONING_PROFILE_NAME" $EXPORT_OPTIONS_PLIST
    - name: Export IPA
      run: |
        xcodebuild -archivePath ./build/$APP_NAME.xcarchive \
            -exportOptionsPlist $EXPORT_OPTIONS_PLIST \
            -exportPath ./build \
            -allowProvisioningUpdates \
            -exportArchive
    - name: Upload to TestFlight
      env:
        APPLEID_EMAIL: ${{ secrets.appleid-email }}
        APPLEID_PASSWORD: ${{ secrets.appleid-password }}
      run: |
        xcrun altool --upload-app \
          -t ios \
          -f ./build/$APP_NAME.ipa \
          -u "$APPLEID_EMAIL" \
          -p "$APPLEID_PASSWORD" --verbose
